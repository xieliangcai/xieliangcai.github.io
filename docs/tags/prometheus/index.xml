<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>prometheus - 标签 - 谢先生健身房</title>
        <link>https://www.ethanzhang.xyz/tags/prometheus/</link>
        <description>prometheus - 标签 - 谢先生健身房</description>
        <generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 25 Feb 2023 07:57:09 &#43;0800</lastBuildDate><atom:link href="https://www.ethanzhang.xyz/tags/prometheus/" rel="self" type="application/rss+xml" /><item>
    <title>Prometheus安装</title>
    <link>https://www.ethanzhang.xyz/posts/prometheus%E5%AE%89%E8%A3%85/</link>
    <pubDate>Sat, 25 Feb 2023 07:57:09 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.ethanzhang.xyz/posts/prometheus%E5%AE%89%E8%A3%85/</guid>
    <description><![CDATA[Prometheus安装 下载解压 mkdir -p /opt/prometheus wget https://github.com/prometheus/prometheus/releases/download/v2.37.1/prometheus-2.37.1.linux-amd64.tar.gz tar xf prometheus-2.37.1.linux-amd64.tar.gz cp -far prometheus-2.37.1.linux-amd64/* /opt/prometheus/
将服务挂使用systemd 托管 cat &lt;&lt;EOF &gt;/etc/systemd/system/prometheus.service [Unit] Description=&quot;prometheus&quot; Documentation=https://prometheus.io/ After=network.target [Service] Type=simple ExecStart=/opt/prometheus/prometheus --config.file=/opt/prometheus/prometheus.yml --storage.tsdb.path=/opt/prometheus/data --web.enable-lifecycle --enable-feature=remote-write-receiver --query.lookback-delta=2m --web.enable-admin-api Restart=on-failure SuccessExitStatus=0 LimitNOFILE=65536 StandardOutput=syslog StandardError=syslog SyslogIdentifier=prometheus [Install] WantedBy=multi-user.target EOF systemctl enable prometheus systemctl start prometheus systemctl status prometheus 启动参数 --config.file=/opt/prometheus/prometheus.yml 指定 Prometheus 的配置文件路径 --storage.tsdb.path=/opt/prometheus/data 指定 Prometheus 时序数据的硬盘存储路径 --web.enable-lifecycle 启用生命周期管理相关的 API，比如调用 /-/reload 接口就需要启用该项 --enable-feature=remote-write-receiver 启用 remote write 接收数据的接口，启用该项之后，categraf、grafana-agent 等 agent 就可以通过 /api/v1/write 接口推送数据给 Prometheus --query.]]></description>
</item>
</channel>
</rss>
